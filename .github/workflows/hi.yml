name: Claude README Sync (PR-triggered, 7-day analysis)

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  readme-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history to analyze last 7 days
          # CRITICAL: Don't checkout main, checkout the base branch without PR changes
          ref: ${{ github.event.pull_request.base.sha }}  # Clean base without PR commits
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Analyze last 7 days of changes (excluding current PR)
        id: analyze-changes
        run: |
          echo "=== Analyzing changes from last 7 days (excluding current PR) ==="
          
          # Get the base commit (main branch tip before this PR)
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          echo "Base SHA (main before PR): $BASE_SHA"
          
          # Get commits from last 7 days on main branch only
          SINCE_DATE=$(date -d '7 days ago' --iso-8601)
          echo "Checking changes since: $SINCE_DATE"
          
          # Get changed files in the last week on main branch only
          echo "Files changed in last 7 days on main:"
          CHANGED_FILES=$(git log $BASE_SHA --since="$SINCE_DATE" --name-only --pretty=format: \
            | sort -u \
            | grep -v '^$' \
            | head -50)
          echo "$CHANGED_FILES"
          
          # Get commit count and summary from main branch only
          RECENT_COMMITS=$(git log $BASE_SHA --since="$SINCE_DATE" --oneline)
          COMMIT_COUNT=$(echo "$RECENT_COMMITS" | wc -l)
          
          echo "=== Commits from last 7 days on main ($COMMIT_COUNT total) ==="
          echo "$RECENT_COMMITS"
          
          # Generate unique branch name
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="readme-sync-${TIMESTAMP}"
          echo "Will create branch: $BRANCH_NAME"
          
          # Save to environment
          {
            echo "CHANGED_FILES<<EOF"
            echo "$CHANGED_FILES"
            echo "EOF"
            echo "COMMIT_COUNT=$COMMIT_COUNT"
            echo "SINCE_DATE=$SINCE_DATE"
            echo "BRANCH_NAME=$BRANCH_NAME"
            echo "BASE_SHA=$BASE_SHA"
          } >> $GITHUB_ENV
          
          # Check if we have changes to analyze
          if [ "$COMMIT_COUNT" -eq "0" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "No commits in the last 7 days on main branch"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Found $COMMIT_COUNT commits to analyze on main"
          fi

      - name: Sync README with Claude and Create PR
        if: steps.analyze-changes.outputs.skip != 'true'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "45"
          allowed_tools: "Bash(git config*),Bash(git checkout*),Bash(git branch*),Bash(git status),Bash(git log*),Bash(git diff*),Bash(git add*),Bash(git commit*),Bash(git push*),Bash(echo*),View,GlobTool,GrepTool,BatchTool,Edit,mcp__github__get_file_contents"
          direct_prompt: |
            I need you to analyze the code changes from the last 7 days on the main branch (excluding the current PR), update the README.md file, and create a separate pull request for the documentation updates.
            
            **CRITICAL INSTRUCTIONS**:
            - You are currently on commit ${{ env.BASE_SHA }} (main branch before the triggering PR)
            - DO NOT include any changes from the triggering PR #${{ github.event.pull_request.number }}
            - Only analyze changes that were already merged to main in the last 7 days
            - Create a clean branch with ONLY README changes
            
            Please follow these steps EXACTLY:
            
            **Step 1: Verify Clean State**
            1. Run `git log --oneline -5` to confirm you're on the clean main branch
            2. Run `git status` to verify clean working directory
            3. Run `git config --global user.name 'Claude Bot'`
            4. Run `git config --global user.email 'claude-bot@anthropic.com'`
                      
            **Step 2: Analyze Recent Changes on Main Branch Only**
            5. Run `git log --since='${{ env.SINCE_DATE }}' --oneline` to see commits from the last week
            6. Run `git log --since='${{ env.SINCE_DATE }}' --name-only --pretty=format: | sort -u | grep -v '^$'` to see which files changed
            7. Run `git log --since='${{ env.SINCE_DATE }}' --pretty=format:"%h %s" -n 10` to see recent commit messages
            8. Run `git diff HEAD~${{ env.COMMIT_COUNT }}..HEAD` to see actual code changes (if ${{ env.COMMIT_COUNT }} > 0)
            
            **Step 3: README Analysis & Update**
            9. Read and understand the current README.md content
            10. Analyze all the changes from the past 7 days to understand what functionality has been added, modified, or removed
            11. Create and switch to new branch: `git checkout -b ${{ env.BRANCH_NAME }}`
            12. Verify you're on the new branch: `git branch --show-current`
            13. Update the README.md to reflect these accumulated changes (maintain existing structure and tone)
            
            **Step 4: Commit ONLY README Changes**
            14. If you made changes to README.md:
                - Run `git add README.md` (ONLY add README.md)
                - Run `git status` to verify only README.md is staged
                - Run `git commit -m "docs: update README based on 7-day main branch analysis
                
                Updates reflect recent changes merged to main:
                - [specific change 1]
                - [specific change 2]
                - [etc.]
                
                Analysis period: ${{ env.SINCE_DATE }} to now
                Commits analyzed: ${{ env.COMMIT_COUNT }}"`
                - Run `git push --set-upstream origin ${{ env.BRANCH_NAME }}`
                - Run `echo "README updated, committed, and pushed successfully"`
            15. If no changes were needed:
                - Run `echo "No README updates required - documentation is current"`
                - SKIP the remaining steps
            
            **Step 5: Create Clean Pull Request (only if changes were made)**
            16. Create PR targeting main branch:
                ```bash
                gh pr create \
                  --title "üìù README Update - 7-day Analysis" \
                  --body "## ü§ñ Automated README Update
                
                This PR contains README updates based on analysis of the last 7 days of changes **already merged to main**.
                
                **Triggered by:** PR #${{ github.event.pull_request.number }} - \"${{ github.event.pull_request.title }}\"
                
                **Analysis Period:** ${{ env.SINCE_DATE }} to now
                
                **Base Commit:** ${{ env.BASE_SHA }}
                
                **Changes Analyzed:** ${{ env.COMMIT_COUNT }} commits on main branch
                
                ### What This PR Contains
                
                - ‚úÖ README.md updates only
                - ‚úÖ Based on changes already in main branch
                - ‚úÖ No code changes from triggering PR included
                
                ### Recent Activity Reflected in README
                
                [Claude will list the specific changes found during analysis]
                
                ---
                
                *This PR contains only documentation updates and can be safely merged independently of the triggering PR.*" \
                  --base main \
                  --head ${{ env.BRANCH_NAME }} \
                  --label "documentation,automated,readme-update"
                ```
            
            **Critical Rules:**
            - Only analyze commits already on main branch (before the triggering PR)
            - Create a branch with ONLY README changes
            - Do not include any changes from PR #${{ github.event.pull_request.number }}
            - The new PR should be independent and mergeable regardless of the triggering PR status
            
            **Context:**
            - Base commit: ${{ env.BASE_SHA }} (main before triggering PR)
            - Analysis period: Last 7 days (since ${{ env.SINCE_DATE }})
            - Total commits on main: ${{ env.COMMIT_COUNT }}
            - New branch name: ${{ env.BRANCH_NAME }}
            - Triggering PR: #${{ github.event.pull_request.number }} (excluded from analysis)

      - name: Handle no changes case
        if: steps.analyze-changes.outputs.skip == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `## ‚ÑπÔ∏è No README Update Needed
              
              I analyzed the main branch but found no commits in the last 7 days that would require README updates.
              
              The current README.md appears to be up to date with recent changes.
              
              **Analysis Details:**
              - Base commit: ${{ env.BASE_SHA }}
              - Period: Last 7 days
              - Commits found: 0
              
              ---
              
              *This comment was automatically generated by Claude README Sync*`
            });
