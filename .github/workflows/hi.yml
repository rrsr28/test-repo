name: Claude README Sync (PR-triggered, 7-day analysis)

on:
  pull_request:
    types: [opened, synchronize]
    
jobs:
  readme-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout main branch (clean state)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup GitHub CLI and Git Config
        run: |
          # Setup GitHub CLI
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
          # Setup git config for commits
          git config --global user.name 'Claude Bot'
          git config --global user.email 'claude-bot@anthropic.com'
          
          # Verify we're on main and clean
          echo "Current branch: $(git branch --show-current)"
          echo "Working directory status:"
          git status --porcelain
      
      - name: Analyze last 7 days of changes
        id: analyze-changes
        run: |
          echo "=== Analyzing changes from last 7 days ==="
          
          # Get commits from last 7 days
          SINCE_DATE=$(date -d '7 days ago' --iso-8601)
          echo "Checking changes since: $SINCE_DATE"
          
          # Get changed files in the last week
          echo "Files changed in last 7 days:"
          CHANGED_FILES=$(git log --since="$SINCE_DATE" --name-only --pretty=format: \
            | sort -u \
            | grep -v '^$' \
            | head -50)
          echo "$CHANGED_FILES"
          
          # Get commit count and summary
          RECENT_COMMITS=$(git log --since="$SINCE_DATE" --oneline)
          COMMIT_COUNT=$(echo "$RECENT_COMMITS" | wc -l)
          
          echo "=== Commits from last 7 days ($COMMIT_COUNT total) ==="
          echo "$RECENT_COMMITS"
          
          # Generate unique branch name
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="readme-sync-${TIMESTAMP}"
          echo "Will create branch: $BRANCH_NAME"
          
          # Save to environment
          {
            echo "CHANGED_FILES<<EOF"
            echo "$CHANGED_FILES"
            echo "EOF"
            echo "COMMIT_COUNT=$COMMIT_COUNT"
            echo "SINCE_DATE=$SINCE_DATE"
            echo "BRANCH_NAME=$BRANCH_NAME"
          } >> $GITHUB_ENV
          
          # Check if we have changes to analyze
          if [ "$COMMIT_COUNT" -eq "0" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "No commits in the last 7 days"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Found $COMMIT_COUNT commits to analyze"
          fi
      
      - name: Create new branch for README updates
        if: steps.analyze-changes.outputs.skip != 'true'
        run: |
          echo "Creating new branch: ${{ env.BRANCH_NAME }}"
          git checkout -b ${{ env.BRANCH_NAME }}
          echo "Current branch after creation: $(git branch --show-current)"
          
          # Verify we're on the new branch
          CURRENT_BRANCH=$(git branch --show-current)
          if [ "$CURRENT_BRANCH" != "${{ env.BRANCH_NAME }}" ]; then
            echo "ERROR: Failed to switch to new branch. Current: $CURRENT_BRANCH, Expected: ${{ env.BRANCH_NAME }}"
            exit 1
          fi
          
          echo "Successfully created and switched to branch: ${{ env.BRANCH_NAME }}"
      
      - name: Sync README with Claude
        if: steps.analyze-changes.outputs.skip != 'true'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "45"
          allowed_tools: "Bash(git status),Bash(git branch),Bash(git branch --show-current),Bash(git log --since='${{ env.SINCE_DATE }}' --oneline),Bash(git log --since='${{ env.SINCE_DATE }}' --name-only --pretty=format:),Bash(git diff --name-only HEAD~${{ env.COMMIT_COUNT }}..HEAD),Bash(git diff HEAD~${{ env.COMMIT_COUNT }}..HEAD),Bash(git add README.md),Bash(git commit -m*),Bash(echo*),View,GlobTool,GrepTool,BatchTool,Edit"
          direct_prompt: |
            I need you to analyze the recent code changes and update the README.md file. 
            
            **CRITICAL**: You are already on the correct branch (${{ env.BRANCH_NAME }}) - DO NOT create or switch branches!
            
            Please follow these steps:
            
            **Step 1: Verify Current State**
            1. Run `git branch --show-current` to confirm you're on branch: ${{ env.BRANCH_NAME }}
            2. Run `git status` to check working directory status
            
            **Step 2: Analyze Recent Changes**
            3. Run `git log --since='${{ env.SINCE_DATE }}' --oneline` to see commits from the last week
            4. Run `git log --since='${{ env.SINCE_DATE }}' --name-only --pretty=format:` to see which files changed
            5. Run `git diff --name-only HEAD~${{ env.COMMIT_COUNT }}..HEAD` for changed files list
            6. Run `git diff HEAD~${{ env.COMMIT_COUNT }}..HEAD` to see actual code changes
            
            **Step 3: Update README**
            7. Read the current README.md file
            8. Analyze the changes from the past 7 days and understand what functionality was added/modified/removed
            9. Update the README.md to reflect these changes (maintain existing structure and tone)
            
            **Step 4: Commit Changes (ONLY if README was updated)**
            10. If you made changes to README.md:
                - Run `git add README.md`
                - Run `git commit -m "docs: update README based on 7-day analysis - [brief description]"`
                - Run `echo "README updated and committed successfully"`
            11. If no changes were needed:
                - Run `echo "No README updates required"`
            
            **Guidelines:**
            - Focus on consolidating changes rather than individual commits
            - Update relevant sections (installation, usage, API docs, features, etc.)
            - Be specific about what changed and include examples for new features
            - Maintain the existing README structure and tone
            
            **Context:**
            - Analysis period: ${{ env.SINCE_DATE }} to now
            - Total commits: ${{ env.COMMIT_COUNT }}
            - Current branch: ${{ env.BRANCH_NAME }}
            - Triggering PR: #${{ github.event.pull_request.number }}
            
            **Remember: DO NOT switch branches or create new branches - you're already on the correct one!**
      
      - name: Push branch and create PR
        if: steps.analyze-changes.outputs.skip != 'true'
        run: |
          # Check if there are any commits on the new branch
          COMMITS_ON_BRANCH=$(git rev-list --count ${{ github.event.repository.default_branch }}..${{ env.BRANCH_NAME }})
          
          if [ "$COMMITS_ON_BRANCH" -gt "0" ]; then
            echo "Found $COMMITS_ON_BRANCH commit(s) on branch ${{ env.BRANCH_NAME }}"
            
            # Push the branch
            echo "Pushing branch to origin..."
            git push origin ${{ env.BRANCH_NAME }}
            
            # Create PR
            echo "Creating pull request..."
            PR_URL=$(gh pr create \
              --title "üìù README Update - 7-day Analysis ($(date +%Y-%m-%d))" \
              --body "## README Update - 7-day Analysis

            This PR updates the README.md based on analysis of development activity from the last 7 days.

            **Analysis Details:**
            - **Period**: ${{ env.SINCE_DATE }} to $(date --iso-8601)
            - **Commits Analyzed**: ${{ env.COMMIT_COUNT }}
            - **Triggered by**: PR #${{ github.event.pull_request.number }} - \"${{ github.event.pull_request.title }}\"

            **Changes Made:**
            The README has been updated to reflect recent code changes and improvements. Please review the changes to ensure they accurately represent the current state of the project.

            ---
            ü§ñ *This PR was automatically created by Claude Bot*" \
              --base ${{ github.event.repository.default_branch }} \
              --head ${{ env.BRANCH_NAME }})
            
            echo "‚úÖ Created PR: $PR_URL"
            
            # Comment on the original PR
            gh pr comment ${{ github.event.pull_request.number }} --body "ü§ñ **README Update Created**

            I've analyzed the last 7 days of development activity and created a separate PR to update the README:

            **üìä Analysis Summary:**
            - **Period**: ${{ env.SINCE_DATE }} to $(date --iso-8601)
            - **Commits Analyzed**: ${{ env.COMMIT_COUNT }}
            - **New Branch**: \`${{ env.BRANCH_NAME }}\`

            **üîó README Update PR**: $PR_URL

            The README has been updated to reflect recent changes and improvements in the codebase."
            
          else
            echo "No commits found on branch ${{ env.BRANCH_NAME }}, no PR needed"
            
            # Still comment on the original PR to explain
            gh pr comment ${{ github.event.pull_request.number }} --body "ü§ñ **README Analysis Complete**

            I analyzed the last 7 days of development activity but found that no README updates were necessary at this time.

            **üìä Analysis Summary:**
            - **Period**: ${{ env.SINCE_DATE }} to $(date --iso-8601)
            - **Commits Analyzed**: ${{ env.COMMIT_COUNT }}

            The current README appears to be up-to-date with recent changes."
            
            # Clean up the unused branch
            git checkout ${{ github.event.repository.default_branch }}
            git branch -D ${{ env.BRANCH_NAME }} || true
          fi
